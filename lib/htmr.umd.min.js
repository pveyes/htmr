!(function(t) {
  'use strict';
  function e(t) {
    return /^-ms-/.test(t) && (t = t.substr(1)), t.replace(/-(.)/g, function(
      t,
      e
    ) {
      return e.toUpperCase();
    });
  }
  function r(t) {
    return /^\d+px$/.test(t)
      ? t.slice(0, t.length - 2)
      : "'" + t.replace(/'/g, '"') + "'";
  }
  function n(t) {
    var n = {};
    return t
      .split(';')
      .filter(function(t) {
        return '' !== t.trim();
      })
      .forEach(function(t) {
        var a = t.split(':'),
          i = o(a, 2),
          u = i[0],
          c = i[1],
          l = e(u.trim()),
          s = r(c.trim());
        n[l] = s;
      }), n;
  }
  function a(t) {
    var e = {};
    for (var r in t)
      switch (r) {
        case 'class':
          e.className = t[r];
          break;
        case 'for':
          e.htmlFor = t[r];
          break;
        case 'style':
          e.style = n(t[r]);
          break;
        default:
          e[r] = t[r];
      }
    return e;
  }
  function i(t) {
    return (l.textContent = t), l.innerHTML;
  }
  function u(e, r, n) {
    switch (e.nodeType) {
      case c.COMMENT:
        return null;
      case c.TEXT:
        return '' === e.textContent.trim() ? null : i(e.textContent);
    }
    for (
      var o = e.tagName.toLowerCase(), l = r[o] || o, s = {}, f = 0;
      f < e.attributes.length;
      f++
    ) {
      var m = e.attributes[f].name,
        d = e.attributes[f].value;
      s[m] = d;
    }
    var v = Object.assign(a(s), { key: n }),
      y = Array.from(e.childNodes).map(function(t, e) {
        return u(t, r, null === n ? e : n + '.' + e);
      });
    return t.createElement(l, v, y);
  }
  t = t && t.hasOwnProperty('default') ? t.default : t;
  var o = (function() {
      function t(t, e) {
        var r = [],
          n = !0,
          a = !1,
          i = void 0;
        try {
          for (
            var u, o = t[Symbol.iterator]();
            !(n = (u = o.next()).done) &&
            (r.push(u.value), !e || r.length !== e);
            n = !0
          );
        } catch (t) {
          (a = !0), (i = t);
        } finally {
          try {
            !n && o.return && o.return();
          } finally {
            if (a) throw i;
          }
        }
        return r;
      }
      return function(e, r) {
        if (Array.isArray(e)) return e;
        if (Symbol.iterator in Object(e)) return t(e, r);
        throw new TypeError(
          'Invalid attempt to destructure non-iterable instance'
        );
      };
    })(),
    c = { ELEMENT: 1, TEXT: 3, COMMENT: 8 },
    l = document.createElement('div');
  module.exports = function(t) {
    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
      r = document.createElement('div');
    r.innerHTML = t.trim();
    var n = Array.from(r.childNodes).filter(function(t) {
        return (
          t.nodeType === c.ELEMENT ||
          (t.nodeType === c.TEXT && '' !== t.textContent.trim())
        );
      }),
      a = void 0;
    return 1 ===
    (a =
      1 === n.length
        ? u(n[0], e, null)
        : n.map(function(t, r) {
            return u(t, e, r);
          })).length
      ? a[0]
      : a;
  };
})(React);
